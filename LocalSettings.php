<?php
# This file was automatically generated by the MediaWiki 1.43.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Einbinden der Secret-Datei (nicht fürs Reop-bestimmt) ##

$host = $_SERVER['HTTP_HOST'];
$env = null;

switch (true) {
  case str_contains($host, 'localhost'):
  case str_contains($host, 'dev'):
    $env = 'dev';
    break;

  case str_contains($host, 'staging'):
    $env = 'staging';
    break;

  default:
    $env = 'prod';
    break;
}

$secretFile = __DIR__ . "/secrets.$env.php";

if (!file_exists($secretFile)) {
  die("Konfiguration nicht vorhanden oder Zugriff verweigert.");
}

require_once $secretFile;




## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "Wikonia";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "https://wiki.wikonia.net";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
	'1x' => "$wgResourceBasePath/resources/assets/change-your-logo.svg",
	'icon' => "$wgResourceBasePath/resources/assets/change-your-logo.svg",
];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "no-reply@wikonia.net";
$wgPasswordSender = "no-reply@wikonia.net";

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = $mySecrets['DBserver'];
$wgDBname = $mySecrets['DBname'];
$wgDBuser = $mySecrets['DBuser'];
$wgDBpassword = $mySecrets['DBpassword'];

# MySQL specific settings
$wgDBprefix = $mySecrets['DBprefix'];
$wgDBssl = false;

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
#$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = true;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = "de";

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgSecretKey = $mySecrets['SecretKey'];

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = $mySecrets['UpgradeKey'];

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "https://creativecommons.org/licenses/by-sa/4.0/";
$wgRightsText = "Creative Commons „Namensnennung – Weitergabe unter gleichen Bedingungen“";
$wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/cc-by-sa.png";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MinervaNeue' );
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );


# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'AbuseFilter' );
wfLoadExtension( 'CategoryTree' );
wfLoadExtension( 'Cite' );
wfLoadExtension( 'CiteThisPage' );
wfLoadExtension( 'CodeEditor' );
wfLoadExtension( 'ConfirmEdit' );
wfLoadExtension( 'DiscussionTools' );
wfLoadExtension( 'Echo' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Interwiki' );
wfLoadExtension( 'Linter' );
wfLoadExtension( 'LoginNotify' );
wfLoadExtension( 'MultimediaViewer' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'OATHAuth' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'ReplaceText' );
wfLoadExtension( 'Scribunto' );
$wgScribuntoDefaultEngine = 'luastandalone';
wfLoadExtension( 'SecureLinkFixer' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TemplateData' );
wfLoadExtension( 'TextExtracts' );
wfLoadExtension( 'Thanks' );
wfLoadExtension( 'VisualEditor' );
wfLoadExtension( 'WikiEditor' );


# End of automatically generated settings.
# Add more configuration options below.

### Installation zusätzlicher Ectensions  ###
wfLoadExtension( 'Lockdown' );				// Aussperren aus Namensräumen und Seiten für feingranularere Rechteverwaltung
#wfLoadExtension( 'StopForumSpam' );			// Spam-Schutz: Keine Bekannten Spam-IPs zulassen

wfLoadExtension( 'CheckUser' );				// Checkuser: IPs nachschauen
wfLoadExtension( 'Cargo' );				// Speichern strukturierter Daten für Artikel
wfLoadExtension( 'ApprovedRevs' );			// Nur die letzte Version eines Beitrags wird freigegeben.
wfLoadExtension( 'UserMerge' );				// Benutzerkonen vereinen (und mit Trick 17 löschen)
wfLoadExtension( 'RevisionSlider' );			// Bessere Dartellung Revisionsverläufe
wfLoadExtension( 'WhoIsWatching' );			// Anzeigen, wer eine Seite beobachtet
wfLoadExtension( 'PageNotice' );			// Hinweisbanner pro Namensraum / Seite
wfLoadExtension( 'DynamicSidebar' );			// Benutzerspezifische Seitenleist






### Konfiguration zusätzler Extensions ###

## Lockdown ##

// Nur Admins dürfen Spezialseite "Version" sehen
$wgSpecialPageLockdown['Version'] = [ 'sysop' ];


## Citoid ##
wfLoadExtension( 'UniversalLanguageSelector' );		// Anhängigkeit für Translate
wfLoadExtension( 'Translate' );

## FlaggedRevs ##
wfLoadExtension( 'ApprovedRevs' );

// Optional: Nur bestimmte Namensräume aktivieren
$wgApprovedRevsNamespaces = [ NS_MAIN ]; // nur im Hauptnamensraum

// Optional: Nur bestimmte Gruppen dürfen freigeben
$wgGroupPermissions['sysop']['approverevisions'] = true;	//Später anpassen auf weitere Gruppen

### Namesnräume ###

## Öffentliche Zusatznamensräume ##

define("NS_PORTAL", 100);
define("NS_PORTAL_TALK", 10);
$wgExtraNamespaces[NS_PORTAL] = "Portal";
$wgExtraNamespaces[NS_PORTAL_TALK] = "Portal_Diskussion";


define("NS_ECHO", 301);
define("NS_ECHO_TALK", 302);
$wgExtraNamespaces[NS_ECHO] = "Echo";
$wgExtraNamespaces[NS_ECHO_TALK] = "Echo_Diskussion";

define("NS_PROBLEME", 303);
define("NS_PROBLEME_TALK", 304);
$wgExtraNamespaces[NS_PROBLEME] = "Probleme";
$wgExtraNamespaces[NS_PROBLEME_TALK] = "Probleme_Diskussion";

## Interne Zusatznamensräume ##
define("NS_PORTALINTERN", 350);
define("NS_PORTALINTERN_TALK", 351);
$wgExtraNamespaces[NS_PORTALINTERN] = "PortalIntern";
$wgExtraNamespaces[NS_PORTALINTERN_TALK] = "PortalIntern_Diskussion";

define("NS_TEAM", 352);
define("NS_TEAM_TALK", 353);
$wgExtraNamespaces[NS_TEAM] = "Team";
$wgExtraNamespaces[NS_TEAM_TALK] = "Team_Diskussion";

define("NS_INTERN", 354);
define("NS_INTERN_TALK", 355);
$wgExtraNamespaces[NS_INTERN] = "Intern";
$wgExtraNamespaces[NS_INTERN_TALK] = "Intern_Diskussion";


## Alias für Namensräume ##

$wgNamespaceAliases += [
	'Projekt' 					=> NS_PROJECT,			// Für Verwirrte und Hardliner
    'Projekt_Diskussion' 		=> NS_PROJECT_TALK,	
    'Benutzerin' 				=> NS_USER,				// Gendern "light"
	'Benutzerin_Diskussion' 	=> NS_USER_TALK,		// Gendern "light" (aber konsequent)
	'Problemlösung' 			=> NS_PROBLEME,			// Die Langform
	'Problemlösung_Diskussion' 	=> NS_PROBLEME_TALK,  
	
	// Shortcuts für Tippfaule
    'W' 	=> NS_PROJECT,
    'H' 	=> NS_HELP,
	'K' 	=> NS_CATEGORY,
    'V' 	=> NS_TEMPLATE,
    'M' 	=> NS_MODULE,
	
	'PL' 	=> NS_PROBLEME,
    
    'Int' 	=> NS_INTERN,
    'E' 	=> NS_ECHO,
    
	'MW' 	=> NS_MEDIAWIKI
	
	];


## Namensräume verstecken ##
$wgNamespaceProtection[NS_ECHO_TALK] = [ 'never' ];
$wgNamespaceProtection[NS_INTERN_TALK] = [ 'never' ];
$wgNamespaceContentModels[NS_ECHO_TALK] = 'wikitext'; // nötig für saubere Darstellung


### Benutzer-Gruppen  ###


## Admins (sysop) ##
$wgUserMergeProtectedGroups = [ 'sysop' ];			// Admins können nicht gemerged werden
$wgGroupPermissions['sysop']['whoiswatching'] = true;		// Beobachtungsliste anzeigen

## Bürokraten (bureaucrat) ##
$wgGroupPermissions['bureaucrat']['usermerge'] = true; 		// eBenutzer-Accounts zusammenlegen/löschen








